<?xml version="1.0" encoding="utf-8"?>
<tdr class="my_plugin">
  <connection-resolver>
    <!-- There are 4 factors which control how Tableau connects to your database. Each connection has a set of required attributes.
         Think of these as a property collection of key/value pairs.
         
         The ConnectionNormalizer is used to decide which of these attributes are
         required to identify a unique connection. Usually it is the list of all attributes set in the connection dialog and 
         used in connectionBuilder.js.

         The ConnectionBuilder takes the set of required attributes and returns a driver connection string. In the case of an ODBC based
         connection this should be a valid driver connection string which can be passed to SQLDriverConnect. You might want to customize 
         this if your driver needs additional connection options.
    
         The ConnectionProperties takes the set of required attributes and returns a formatted set of JDBC connection properties.

         The DriverResolver determines which driver to load. It supports various name and version number criteria.
    -->
    <connection-normalizer>

      <!-- Optional XML method to normalize a connection. -->
      <required-attributes>

        <!-- This sets a default value for an attribute on every connection.-->
        <default-attributes>
          <default-attribute name='authentication'>auth-user-pass</default-attribute>
        </default-attributes>

        <!-- These are the required attributes. -->
        <attribute-list>
          <attr>server</attr>
          <attr>dbname</attr>
          <attr>authentication</attr>
          <attr>username</attr>
          <attr>password</attr>
          <attr>odbc-connect-string-extras</attr>
        </attribute-list>

      </required-attributes>
    </connection-normalizer>

    <!--This file builds the ODBC Connection String or the JDBC URL. -->
    <connection-builder>
      <script file="connectionBuilder.js"/>
    </connection-builder>

    <!-- This is used to build the JDBC connection properties file and is optional.-->
    <connection-properties>
      <script file="connectionProperties.js"/>
    </connection-properties>

  </connection-resolver>

  <driver-resolver>
    <!-- For ODBC drivers there can be multiple driver-match elements. Each one is used in order to match a driver and the first match is used. -->
    <!-- You can have different driver matches on different platforms for example. Windows,Linux,Mac-->
    <driver-match platform='win'>
      <!-- You can use an exact driver match and specify a version number. Ensure your driver returns the correct version number on all platforms.-->
      <driver-name type="exact">My Driver is named exactly this</driver-name>
      <driver-version max="5.2" min="5.1"/>
    </driver-match>
    <driver-match>
      <driver-name type='regex'>My Dri.*</driver-name>
      <driver-version max="5.2.19" min="5.1"/>
      <incompatible-driver-version exact="5.2.9"/>
      <!-- Any version can be either exact or a min/max range.-->
    </driver-match>

  </driver-resolver>
</tdr>
